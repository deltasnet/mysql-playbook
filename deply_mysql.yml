---

- name: Deploy mysql HA Cluster
  hosts: all
  become: true
  become_method: sudo
  gather_facts: true
  tags: always
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
  environment: "{{ proxy_env | default({}) }}"

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: System information
      ansible.builtin.debug:
        var: system_info
      vars:
        system_info:
          OS: "{{ ansible_distribution | default('N/A') }} {{ ansible_distribution_version | default('N/A') }}"
          Kernel: "{{ ansible_kernel | default('N/A') }}"
          CPU model: >-
            {{ ansible_processor[2] | default('N/A') }},
            count: {{ ansible_processor_count | default('N/A') }},
            cores: {{ ansible_processor_cores | default('N/A') }}
          Memory: "{{ (ansible_memtotal_mb / 1024) | round(2) if ansible_memtotal_mb is defined else 'N/A' }} GB"
          Disk space total: >-
            {{
              (ansible_mounts
                | map(attribute='size_total')
                | map('int')
                | sum / 1024 / 1024 / 1024
              )
              | round(2) if ansible_mounts is defined else 'N/A'
            }} GB
          Architecture: "{{ ansible_architecture | default('N/A') }}"
          Virtualization type: "{{ ansible_virtualization_type | default('N/A') }}"
          Product name: "{{ ansible_product_name | default('N/A') }}"
      tags: always

  roles:
    - role: pre-checks
      vars:
        minimal_ansible_version: 2.11.0
      tags: always

  tasks:
    - name: Clean dnf cache
      ansible.builtin.command: dnf clean all
      when:
        - ansible_os_family == "RedHat"
        - ansible_distribution_major_version is version('8', '>=')

    # Ansible requires the iproute package for network facts to be populated
    - name: Make sure that the iproute is installed
      ansible.builtin.package:
        name: iproute
        state: present
      register: package_status
      until: package_status is success
      delay: 5
      retries: 3
      when: ansible_os_family == "RedHat"

- name: deploy_mysql_cluster.yml | mysql Cluster Configuration
  hosts: mysql_cluster
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - vars/system.yml

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: Build a firewall_ports_dynamic_var
      ansible.builtin.set_fact:
        firewall_ports_dynamic_var: "{{ firewall_ports_dynamic_var | default([]) + (firewall_allowed_tcp_ports_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | bool
      tags: firewall

    - name: Build a firewall_rules_dynamic_var
      ansible.builtin.set_fact:
        firewall_rules_dynamic_var: "{{ firewall_rules_dynamic_var | default([]) + (firewall_additional_rules_for[item] | default([])) }}"
      loop: "{{ hostvars[inventory_hostname].group_names }}"
      when: firewall_enabled_at_boot | bool
      tags: firewall

  roles:
    - role: ansible-role-firewall
      environment: "{{ proxy_env | default({}) }}"
      vars:
        firewall_allowed_tcp_ports: "{{ firewall_ports_dynamic_var | default([]) | unique }}"
        firewall_additional_rules: "{{ firewall_rules_dynamic_var | default([]) | unique }}"
      when: firewall_enabled_at_boot|bool
      tags: firewall

    - role: hostname
    - role: resolv_conf
    - role: etc_hosts
    - role: add-repository
    - role: packages
    - role: sudo
    - role: swap
    - role: sysctl
    - role: transparent_huge_pages
    - role: pam_limits
    - role: io-scheduler
    - role: locales
    - role: timezone
    - role: ntp
    - role: ssh-keys
    - role: copy

- name: deploy_mysql_cluster.yml | Deploy balancers
  ansible.builtin.import_playbook: balancers.yml
  when: with_haproxy_load_balancing|bool
  tags: load_balancing, haproxy

- name: deploy_mysql_cluster.yml | mysql Cluster Deployment
  hosts: mysql_cluster
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - vars/system.yml

  pre_tasks:
    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

    - name: Make sure the /software directory exists
      ansible.builtin.file:
        dest: "{{ mysql_home_dir }}"
        state: directory
        owner: postgres
        group: postgres
      tags: always

  roles:
    - role: cron

    - role: pgbouncer
      when: pgbouncer_install|bool

    - role: pgpass

    - role: Orchestrator

    - role: pgbackrest/stanza-create
      when: pgbackrest_install|bool

    # optional
    - role: mysql-users
      when: is_master | bool and mysql_users | length > 0

    - role: mysql-databases
      when: is_master | bool and mysql_databases | length > 0

    - role: mysql-schemas
      when: is_master | bool and mysql_schemas | length > 0

    - role: mysql-grants
      when: is_master | bool and mysql_users | length > 0

    - role: mysql-extensions
      when: is_master | bool and mysql_extensions | length > 0

    # finish (info)
    - role: deploy-finish      